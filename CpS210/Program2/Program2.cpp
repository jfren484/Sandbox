#include <cstdio>
#include <iostream>
#include <string>
#include <vector>
#include "maze.h"
using namespace std;

int main(int argc, const char* argv[]) {
	bool DEBUG = argc > 1 && (strcmp(argv[1], "DEBUG") == 0);

	string line;
	vector<string> lines;
	while (getline(cin, line))
	{
		lines.push_back(line);
	}

	maze m(lines);

	if (DEBUG) {
		cout << "maze:" << endl;
		m.print(cout);
	}
}

/*
				$scope.map = [
					['5', '5', '5', '5', 'L', '5', '5', '5', 'L', 'L', '5', '5', '5', 'L', 'L', '_', '_', '5', '5', '5', '_', '5', '5', '5', '_'],
					['5', 'L', 'L', '4', '4', '4', '4', '4', '4', 'L', 'L', '5', '5', '5', '5', '5', '_', '5', '5', 'L', '_', 'L', '5', 'L', '_'],
					['5', 'L', 'L', '3', '3', '3', '3', '3', '3', 'L', 'L', 'L', '5', '5', '5', 'L', 'L', '5', '5', '4', 'L', 'L', '5', '4', '5'],
					['5', '4', '3', '3', '3', 'L', 'L', '3', '3', '3', '4', '4', '4', '5', '4', 'L', 'L', '5', '4', '4', 'L', 'L', '4', '4', '5'],
					['5', '4', '4', '4', '4', '4', 'L', 'L', '4', '3', '4', 'L', '4', '4', '4', '5', '5', '5', '4', '3', '3', '4', '4', 'L', '5'],
					['5', '4', 'L', '4', '5', '4', 'L', 'L', '4', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', 'L', 'L', '4', 'L', 'L', 'L'],
					['L', '4', 'L', '4', '5', '4', '4', 'L', 'L', 'L', '3', 'L', 'L', '3', '4', '3', 'L', '3', '3', 'L', 'L', '4', '4', 'L', '5'],
					['5', '4', 'L', '4', '5', '5', '4', 'L', 'L', '2', '3', 'L', 'L', '3', '4', '3', 'L', '3', 'L', 'L', 'L', '4', '4', '5', '5'],
					['5', '4', '4', '4', '4', '4', '4', '3', '3', '3', '3', '3', '2', '3', '4', '3', '3', '3', '3', 'L', 'L', '4', '4', '5', '5'],
					['5', '5', 'L', '4', '4', 'L', '3', '3', 'L', 'L', 'L', '2', '2', '3', '3', '3', 'L', 'L', '3', 'L', 'L', 'L', '4', 'L', '_'],
					['L', 'L', 'L', '4', '4', 'L', '3', 'L', 'L', 'L', 'L', '1', '2', '2', 'L', 'L', 'L', 'L', '3', '4', 'L', 'L', '4', 'L', '5'],
					['5', '5', '5', '4', '4', 'L', '3', '3', '2', '2', '2', '1', '1', '1', '2', '1', '2', 'L', '3', '4', '4', '4', '4', '5', '5'],
					['5', 'L', '4', '4', '4', '3', '3', '3', '3', '2', '1', '1', 'H', '1', '1', 'L', '1', '2', '3', 'L', 'L', '4', '4', '4', '5'],
					['5', 'L', 'L', 'L', '4', '4', 'L', 'L', 'L', '2', '1', '1', '1', '1', '1', 'L', '2', '2', '2', 'L', 'L', '3', '4', '4', '5'],
					['5', 'L', 'L', '4', '4', '3', 'L', 'L', 'L', '2', 'L', 'L', '1', 'L', '2', '1', '1', 'L', '2', '2', '2', '3', '4', '4', 'L'],
					['5', '4', '4', '4', '3', '3', '2', '2', '2', '2', 'L', 'L', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', 'L', '4', '5'],
					['5', '5', '5', '4', 'L', 'L', '2', 'L', '3', '3', '3', '2', '1', 'L', 'L', '3', '3', 'L', 'L', 'L', '2', '3', 'L', 'L', '5'],
					['5', '4', '4', '4', 'L', 'L', '2', 'L', '3', '3', '3', '2', '2', 'L', 'L', '3', 'L', 'L', '2', '2', '2', '3', '4', 'L', '5'],
					['L', 'L', 'L', '4', '4', '3', '3', 'L', 'L', 'L', '3', '3', '3', '3', 'L', '3', 'L', 'L', 'L', 'L', 'L', '3', '4', '4', '5'],
					['_', 'L', 'L', '5', '4', '4', '3', '3', 'L', 'L', 'L', '3', '4', '3', '3', '3', '3', 'L', 'L', 'L', 'L', '3', '4', '5', '5'],
					['5', '5', '5', '5', '5', '4', '4', '3', 'L', 'L', 'L', '3', '4', '4', '4', '4', '3', '3', '3', '3', '4', '4', '4', '5', 'L'],
					['_', 'L', '4', '5', 'L', 'L', '4', '3', '3', '3', '3', '3', '4', 'L', 'L', '4', '3', '4', '4', '4', '4', '5', '5', '5', 'L'],
					['_', 'L', '5', '5', 'L', '_', 'L', 'L', 'L', '4', 'L', '4', '4', 'L', 'L', '4', '4', '4', 'L', 'L', 'L', '5', 'L', 'L', '_'],
					['_', '5', '5', 'L', '_', '_', '_', '4', 'L', '4', '4', '4', '4', '5', '5', '4', '4', '4', 'L', '_', '_', '5', '_', '_', '_'],
					['_', '5', '5', 'L', '_', '_', 'L', '5', '5', '5', '5', '5', '5', '5', '5', '5', 'L', '5', '5', '5', '_', '_', '_', '_', '_']
				];

				$scope.mapData = [];
				for (var i = 0; i < 25; i++) {
					$scope.mapData.push([]);
				}

				var center = { 'x': 12, 'y': 12 };
				$scope.mapData[12][12] = { 'coords': center, 'range': 1900 };
				$scope.todoQueue = [center];

				$scope.directions = [
					{ 'x':  0, 'y':  1 },
					{ 'x':  1, 'y':  0 },
					{ 'x':  0, 'y': -1 },
					{ 'x': -1, 'y':  0 }
				];

				$scope.nav = function () {
					var currentQueue = $scope.todoQueue;
					$scope.todoQueue = [];

					currentQueue.forEach(function(toCheckCoords) {
						var self = $scope.mapData[toCheckCoords.x][toCheckCoords.y];
						$scope.directions.forEach(function (direction) {
							var neighborCoords = { 'x': toCheckCoords.x + direction.x, 'y': toCheckCoords.y + direction.y };
							if (neighborCoords.x < 0 || neighborCoords.x > 24 || neighborCoords.y < 0 || neighborCoords.y > 24) {
								// Off the map
								return;
							}

							var neighborData = { 'coords': neighborCoords, 'range': self.range - oceanData.range };

							if (!$scope.mapData[neighborCoords.x][neighborCoords.y] || neighborData.range > $scope.mapData[neighborCoords.x][neighborCoords.y].range) {
								$scope.todoQueue.push(neighborCoords);
								$scope.mapData[neighborCoords.x][neighborCoords.y] = neighborData;
							}
						});
					});
				}
*/